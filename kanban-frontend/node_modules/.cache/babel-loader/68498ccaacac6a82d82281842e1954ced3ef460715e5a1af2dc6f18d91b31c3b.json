{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"columns\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.board ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.board.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.board.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"column\",\n      key: column.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(column.name), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column.cards, card => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: card.id\n      }, [_createElementVNode(\"strong\", null, _toDisplayString(card.title), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString(card.description), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Carregando... \"));\n}","map":{"version":3,"names":["key","class","$data","board","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","name","_hoisted_2","_Fragment","_renderList","columns","column","id","cards","card","title","description","_hoisted_3"],"sources":["C:\\Users\\faculdade\\Desktop\\Kanban\\kanban-frontend\\src\\KanbanBoard.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"board\">\r\n    <h1>{{ board.name }}</h1>\r\n    <div class=\"columns\">\r\n      <div class=\"column\" v-for=\"column in board.columns\" :key=\"column.id\">\r\n        <h2>{{ column.name }}</h2>\r\n        <ul>\r\n          <li v-for=\"card in column.cards\" :key=\"card.id\">\r\n            <strong>{{ card.title }}</strong><br />\r\n            <span>{{ card.description }}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    Carregando...\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'KanbanBoard',\r\n  data() {\r\n    return {\r\n      board: null,\r\n    }\r\n  },\r\n  methods: {\r\n    async loadBoard() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/board/2/')\r\n        this.board = response.data\r\n      } catch (error) {\r\n        console.error('Erro ao carregar o board:', error)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadBoard()\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.columns {\r\n  display: flex;\r\n  gap: 16px;\r\n}\r\n.column {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  width: 250px;\r\n  background-color: #f9f9f9;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAGSC,KAAK,EAAC;AAAS;;EAHxBD,GAAA;AAAA;;SACaE,KAAA,CAAAC,KAAK,I,cAAhBC,mBAAA,CAaM,OAdRC,UAAA,GAEIC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBL,KAAA,CAAAC,KAAK,CAACK,IAAI,kBACjBF,mBAAA,CAUM,OAVNG,UAUM,I,kBATJL,mBAAA,CAQMM,SAAA,QAZZC,WAAA,CAI2CT,KAAA,CAAAC,KAAK,CAACS,OAAO,EAAvBC,MAAM;yBAAjCT,mBAAA,CAQM;MARDH,KAAK,EAAC,QAAQ;MAAkCD,GAAG,EAAEa,MAAM,CAACC;QAC/DR,mBAAA,CAA0B,YAAAC,gBAAA,CAAnBM,MAAM,CAACL,IAAI,kBAClBF,mBAAA,CAKK,c,kBAJHF,mBAAA,CAGKM,SAAA,QAVfC,WAAA,CAO6BE,MAAM,CAACE,KAAK,EAApBC,IAAI;2BAAfZ,mBAAA,CAGK;QAH6BJ,GAAG,EAAEgB,IAAI,CAACF;UAC1CR,mBAAA,CAAiC,gBAAAC,gBAAA,CAAtBS,IAAI,CAACC,KAAK,kB,0BAAYX,mBAAA,CAAM,sCACvCA,mBAAA,CAAmC,cAAAC,gBAAA,CAA1BS,IAAI,CAACE,WAAW,iB;;uDAMnCd,mBAAA,CAEM,OAjBRe,UAAA,EAec,iBAEZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}