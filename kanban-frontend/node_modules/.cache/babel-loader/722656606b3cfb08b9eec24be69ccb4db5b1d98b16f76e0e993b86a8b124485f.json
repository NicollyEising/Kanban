{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ui container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"ui center aligned segment\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"ui raised very padded text container segment\"\n};\nconst _hoisted_4 = {\n  class: \"ui center aligned header\"\n};\nconst _hoisted_5 = {\n  class: \"ui stackable grid\"\n};\nconst _hoisted_6 = {\n  class: \"ui fluid card\"\n};\nconst _hoisted_7 = {\n  class: \"content\"\n};\nconst _hoisted_8 = {\n  class: \"ui top attached label\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"ui form\"\n};\nconst _hoisted_11 = {\n  class: \"field\"\n};\nconst _hoisted_12 = {\n  class: \"field\"\n};\nconst _hoisted_13 = {\n  class: \"ui buttons\"\n};\nconst _hoisted_14 = [\"onClick\", \"disabled\"];\nconst _hoisted_15 = {\n  key: 2,\n  class: \"ui relaxed divided list\"\n};\nconst _hoisted_16 = {\n  class: \"content\"\n};\nconst _hoisted_17 = {\n  class: \"header\"\n};\nconst _hoisted_18 = {\n  class: \"description\"\n};\nconst _hoisted_19 = {\n  key: 3,\n  class: \"ui message tiny\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Botão aparece somente se não existir nenhum board \"), !_ctx.board ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.createBoard && _ctx.createBoard(...args)),\n    class: \"ui primary icon button\"\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n    class: \"plus icon\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Criar Novo Board \")]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Exibe o board quando criado \"), _ctx.board ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n    class: \"columns icon\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.board.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.board.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"four wide column\",\n      key: column.id\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[6] || (_cache[6] = _createElementVNode(\"i\", {\n      class: \"list layout icon\"\n    }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(column.name), 1 /* TEXT */)]), _createCommentVNode(\" Botão criar card \"), !_ctx.isFormVisible(column.id) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => _ctx.showCardForm(column.id),\n      class: \"ui compact teal button small\"\n    }, [...(_cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n      class: \"plus icon\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" Novo Card \")]))], 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Formulário de novo card \"), _ctx.isFormVisible(column.id) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.newCard.title = $event),\n      placeholder: \"Título do card\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newCard.title]])]), _createElementVNode(\"div\", _hoisted_12, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Descrição\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.newCard.description = $event),\n      placeholder: \"Descrição do card\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newCard.description]])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n      class: \"ui primary button\",\n      onClick: $event => _ctx.submitCard(column.id),\n      disabled: !_ctx.newCard.title.trim()\n    }, \" Salvar \", 8 /* PROPS */, _hoisted_14), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n      class: \"or\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n      class: \"ui button\",\n      onClick: _cache[3] || (_cache[3] = $event => _ctx.cancelCard())\n    }, \" Cancelar \")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Lista de cards \"), column.cards.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column.cards, card => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"item\",\n        key: card.id\n      }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString(card.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_18, _toDisplayString(card.description), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, \"Nenhum card\"))])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_ctx","board","_hoisted_2","_createElementVNode","onClick","_cache","args","createBoard","_createTextVNode","_hoisted_3","_hoisted_4","_toDisplayString","name","_hoisted_5","_Fragment","_renderList","columns","column","id","_hoisted_6","_hoisted_7","_hoisted_8","isFormVisible","$event","showCardForm","_hoisted_9","_hoisted_10","_hoisted_11","type","newCard","title","placeholder","_hoisted_12","description","_hoisted_13","submitCard","disabled","trim","_hoisted_14","cancelCard","cards","length","_hoisted_15","card","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19"],"sources":["C:\\Users\\faculdade\\Desktop\\Kanban\\Kanban\\kanban-frontend\\src\\KanbanBoard.vue"],"sourcesContent":["<template>\r\n  <div class=\"ui container\">\r\n    <!-- Botão aparece somente se não existir nenhum board -->\r\n    <div v-if=\"!board\" class=\"ui center aligned segment\">\r\n      <button @click=\"createBoard\" class=\"ui primary icon button\">\r\n        <i class=\"plus icon\"></i>\r\n        Criar Novo Board\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Exibe o board quando criado -->\r\n    <div v-if=\"board\" class=\"ui raised very padded text container segment\">\r\n      <h2 class=\"ui center aligned header\">\r\n        <i class=\"columns icon\"></i>\r\n        {{ board.name }}\r\n      </h2>\r\n\r\n      <div class=\"ui stackable grid\">\r\n        <div\r\n          class=\"four wide column\"\r\n          v-for=\"column in board.columns\"\r\n          :key=\"column.id\"\r\n        >\r\n          <div class=\"ui fluid card\">\r\n            <div class=\"content\">\r\n              <div class=\"ui top attached label\">\r\n                <i class=\"list layout icon\"></i>\r\n                {{ column.name }}\r\n              </div>\r\n\r\n              <!-- Botão criar card -->\r\n              <button\r\n                v-if=\"!isFormVisible(column.id)\"\r\n                @click=\"showCardForm(column.id)\"\r\n                class=\"ui compact teal button small\"\r\n              >\r\n                <i class=\"plus icon\"></i>\r\n                Novo Card\r\n              </button>\r\n\r\n              <!-- Formulário de novo card -->\r\n              <div v-if=\"isFormVisible(column.id)\" class=\"ui form\">\r\n                <div class=\"field\">\r\n                  <label>Título</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    v-model=\"newCard.title\"\r\n                    placeholder=\"Título do card\"\r\n                  />\r\n                </div>\r\n                <div class=\"field\">\r\n                  <label>Descrição</label>\r\n                  <textarea\r\n                    v-model=\"newCard.description\"\r\n                    placeholder=\"Descrição do card\"\r\n                  ></textarea>\r\n                </div>\r\n                <div class=\"ui buttons\">\r\n                  <button\r\n                    class=\"ui primary button\"\r\n                    @click=\"submitCard(column.id)\"\r\n                    :disabled=\"!newCard.title.trim()\"\r\n                  >\r\n                    Salvar\r\n                  </button>\r\n                  <div class=\"or\"></div>\r\n                  <button class=\"ui button\" @click=\"cancelCard()\">\r\n                    Cancelar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Lista de cards -->\r\n              <div class=\"ui relaxed divided list\" v-if=\"column.cards.length\">\r\n                <div\r\n                  class=\"item\"\r\n                  v-for=\"card in column.cards\"\r\n                  :key=\"card.id\"\r\n                >\r\n                  <div class=\"content\">\r\n                    <div class=\"header\">{{ card.title }}</div>\r\n                    <div class=\"description\">{{ card.description }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div v-else class=\"ui message tiny\">Nenhum card</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script src=\"./KanbanBoard.js\"></script>\r\n<style src=\"./KanbanBoard.css\" scoped></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}