{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nimport KanbanBoard from './KanbanBoard.js'; // Se tiver um componente separado para o board\n\nexport default {\n  name: 'KanbanApp',\n  components: {\n    KanbanBoard\n  },\n  // remova se não usar componente separado\n  data() {\n    return {\n      authTab: 'login',\n      isAuthenticated: false,\n      token: null,\n      user: null,\n      board: null,\n      loading: false,\n      authError: null,\n      registerSuccess: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        password: ''\n      },\n      // Dados para cards e colunas\n      newCard: {\n        title: '',\n        description: ''\n      },\n      visibleCardFormColumnId: null\n    };\n  },\n  created() {\n    this.token = localStorage.getItem('token');\n    if (this.token) {\n      this.isAuthenticated = true;\n      this.loadBoard();\n    }\n  },\n  methods: {\n    // Autenticação\n    async login() {\n      this.loading = true;\n      this.authError = null;\n      this.registerSuccess = false;\n      try {\n        const res = await axios.post('/api/login/', this.loginForm);\n        this.token = res.data.token;\n        this.user = {\n          id: res.data.user_id,\n          username: res.data.username\n        };\n        localStorage.setItem('token', this.token);\n        this.isAuthenticated = true;\n        this.loading = false;\n        this.authTab = 'login';\n        this.loginForm.username = '';\n        this.loginForm.password = '';\n        this.loadBoard();\n      } catch (error) {\n        this.authError = error.response?.data?.detail || 'Erro ao fazer login';\n        this.loading = false;\n      }\n    },\n    async register() {\n      this.loading = true;\n      this.authError = null;\n      this.registerSuccess = false;\n      try {\n        await axios.post('/api/register/', this.registerForm);\n        this.registerSuccess = true;\n        this.loading = false;\n        this.registerForm.username = '';\n        this.registerForm.password = '';\n        this.authTab = 'login';\n      } catch (error) {\n        if (error.response?.data && typeof error.response.data === 'object') {\n          this.authError = Object.values(error.response.data).flat().join(', ');\n        } else {\n          this.authError = 'Erro ao registrar usuário';\n        }\n        this.loading = false;\n      }\n    },\n    logout() {\n      this.isAuthenticated = false;\n      this.token = null;\n      this.user = null;\n      this.board = null;\n      localStorage.removeItem('token');\n    },\n    // Board\n    async loadBoard() {\n      if (!this.token) return;\n      try {\n        const res = await axios.get('/api/board/', {\n          headers: {\n            Authorization: `Token ${this.token}`\n          }\n        });\n        this.board = res.data;\n      } catch (error) {\n        if (error.response?.status === 401) {\n          this.logout();\n        }\n        this.board = null;\n      }\n    },\n    async createBoard() {\n      if (!this.token) return;\n      try {\n        const res = await axios.post('/api/board/', {\n          name: 'Meu Board'\n        }, {\n          headers: {\n            Authorization: `Token ${this.token}`\n          }\n        });\n        this.board = res.data;\n      } catch {\n        alert('Falha ao criar board.');\n      }\n    },\n    // Cards\n    getColumnColor(columnId) {\n      const colors = ['#21BA45', '#2185D0', '#6435C9', '#F2711C'];\n      return colors[columnId % colors.length];\n    },\n    isFormVisible(columnId) {\n      return this.visibleCardFormColumnId === columnId;\n    },\n    showCardForm(columnId) {\n      this.visibleCardFormColumnId = columnId;\n      this.newCard.title = '';\n      this.newCard.description = '';\n    },\n    cancelCard() {\n      this.visibleCardFormColumnId = null;\n      this.newCard.title = '';\n      this.newCard.description = '';\n    },\n    async submitCard(columnId) {\n      if (!this.token) return;\n      if (!this.newCard.title.trim()) return;\n      try {\n        const res = await axios.post(`/api/board/columns/${columnId}/cards/`, this.newCard, {\n          headers: {\n            Authorization: `Token ${this.token}`\n          }\n        });\n        // Atualiza localmente o board (simplificado)\n        const card = res.data;\n        const column = this.board.columns.find(c => c.id === columnId);\n        if (column) column.cards.push(card);\n        this.cancelCard();\n      } catch {\n        alert('Falha ao adicionar card.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","KanbanBoard","name","components","data","authTab","isAuthenticated","token","user","board","loading","authError","registerSuccess","loginForm","username","password","registerForm","newCard","title","description","visibleCardFormColumnId","created","localStorage","getItem","loadBoard","methods","login","res","post","id","user_id","setItem","error","response","detail","register","Object","values","flat","join","logout","removeItem","get","headers","Authorization","status","createBoard","alert","getColumnColor","columnId","colors","length","isFormVisible","showCardForm","cancelCard","submitCard","trim","card","column","columns","find","c","cards","push"],"sources":["C:/Users/faculdade/Desktop/Kanban/Kanban/kanban-frontend/src/KanbanBoard.js"],"sourcesContent":["import axios from 'axios'\r\nimport KanbanBoard from './KanbanBoard.js' // Se tiver um componente separado para o board\r\n\r\nexport default {\r\n  name: 'KanbanApp',\r\n  components: { KanbanBoard }, // remova se não usar componente separado\r\n  data() {\r\n    return {\r\n      authTab: 'login',\r\n      isAuthenticated: false,\r\n      token: null,\r\n      user: null,\r\n      board: null,\r\n      loading: false,\r\n      authError: null,\r\n      registerSuccess: false,\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      registerForm: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      // Dados para cards e colunas\r\n      newCard: {\r\n        title: '',\r\n        description: '',\r\n      },\r\n      visibleCardFormColumnId: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.token = localStorage.getItem('token')\r\n    if (this.token) {\r\n      this.isAuthenticated = true\r\n      this.loadBoard()\r\n    }\r\n  },\r\n  methods: {\r\n    // Autenticação\r\n    async login() {\r\n      this.loading = true\r\n      this.authError = null\r\n      this.registerSuccess = false\r\n      try {\r\n        const res = await axios.post('/api/login/', this.loginForm)\r\n        this.token = res.data.token\r\n        this.user = { id: res.data.user_id, username: res.data.username }\r\n        localStorage.setItem('token', this.token)\r\n        this.isAuthenticated = true\r\n        this.loading = false\r\n        this.authTab = 'login'\r\n        this.loginForm.username = ''\r\n        this.loginForm.password = ''\r\n        this.loadBoard()\r\n      } catch (error) {\r\n        this.authError = error.response?.data?.detail || 'Erro ao fazer login'\r\n        this.loading = false\r\n      }\r\n    },\r\n    async register() {\r\n      this.loading = true\r\n      this.authError = null\r\n      this.registerSuccess = false\r\n      try {\r\n        await axios.post('/api/register/', this.registerForm)\r\n        this.registerSuccess = true\r\n        this.loading = false\r\n        this.registerForm.username = ''\r\n        this.registerForm.password = ''\r\n        this.authTab = 'login'\r\n      } catch (error) {\r\n        if (error.response?.data && typeof error.response.data === 'object') {\r\n          this.authError = Object.values(error.response.data).flat().join(', ')\r\n        } else {\r\n          this.authError = 'Erro ao registrar usuário'\r\n        }\r\n        this.loading = false\r\n      }\r\n    },\r\n    logout() {\r\n      this.isAuthenticated = false\r\n      this.token = null\r\n      this.user = null\r\n      this.board = null\r\n      localStorage.removeItem('token')\r\n    },\r\n\r\n    // Board\r\n    async loadBoard() {\r\n      if (!this.token) return\r\n      try {\r\n        const res = await axios.get('/api/board/', {\r\n          headers: { Authorization: `Token ${this.token}` },\r\n        })\r\n        this.board = res.data\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          this.logout()\r\n        }\r\n        this.board = null\r\n      }\r\n    },\r\n    async createBoard() {\r\n      if (!this.token) return\r\n      try {\r\n        const res = await axios.post(\r\n          '/api/board/',\r\n          { name: 'Meu Board' },\r\n          { headers: { Authorization: `Token ${this.token}` } }\r\n        )\r\n        this.board = res.data\r\n      } catch {\r\n        alert('Falha ao criar board.')\r\n      }\r\n    },\r\n\r\n    // Cards\r\n    getColumnColor(columnId) {\r\n      const colors = ['#21BA45', '#2185D0', '#6435C9', '#F2711C']\r\n      return colors[columnId % colors.length]\r\n    },\r\n    isFormVisible(columnId) {\r\n      return this.visibleCardFormColumnId === columnId\r\n    },\r\n    showCardForm(columnId) {\r\n      this.visibleCardFormColumnId = columnId\r\n      this.newCard.title = ''\r\n      this.newCard.description = ''\r\n    },\r\n    cancelCard() {\r\n      this.visibleCardFormColumnId = null\r\n      this.newCard.title = ''\r\n      this.newCard.description = ''\r\n    },\r\n    async submitCard(columnId) {\r\n      if (!this.token) return\r\n      if (!this.newCard.title.trim()) return\r\n      try {\r\n        const res = await axios.post(\r\n          `/api/board/columns/${columnId}/cards/`,\r\n          this.newCard,\r\n          {\r\n            headers: { Authorization: `Token ${this.token}` },\r\n          }\r\n        )\r\n        // Atualiza localmente o board (simplificado)\r\n        const card = res.data\r\n        const column = this.board.columns.find((c) => c.id === columnId)\r\n        if (column) column.cards.push(card)\r\n        this.cancelCard()\r\n      } catch {\r\n        alert('Falha ao adicionar card.')\r\n      }\r\n    },\r\n  },\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}