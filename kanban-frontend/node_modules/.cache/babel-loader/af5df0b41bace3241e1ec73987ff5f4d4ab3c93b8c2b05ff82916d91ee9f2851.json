{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"kanban-board\"\n};\nconst _hoisted_2 = {\n  class: \"board-title\"\n};\nconst _hoisted_3 = {\n  class: \"columns\"\n};\nconst _hoisted_4 = {\n  class: \"column-title\"\n};\nconst _hoisted_5 = {\n  class: \"cards-list\"\n};\nconst _hoisted_6 = {\n  class: \"card-title\"\n};\nconst _hoisted_7 = {\n  class: \"card-description\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.board ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, _toDisplayString($data.board.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.board.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"column\",\n      key: column.id\n    }, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString(column.name), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column.cards, card => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        class: \"card\",\n        key: card.id\n      }, [_createElementVNode(\"strong\", _hoisted_6, _toDisplayString(card.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(card.description), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" Carregando... \"));\n}","map":{"version":3,"names":["key","class","$data","board","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","name","_hoisted_3","_Fragment","_renderList","columns","column","id","_hoisted_4","_hoisted_5","cards","card","_hoisted_6","title","_hoisted_7","description","_hoisted_8"],"sources":["C:\\Users\\faculdade\\Desktop\\Kanban\\Kanban\\kanban-frontend\\src\\KanbanBoard.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"board\" class=\"kanban-board\">\r\n    <h1 class=\"board-title\">{{ board.name }}</h1>\r\n    <div class=\"columns\">\r\n      <div class=\"column\" v-for=\"column in board.columns\" :key=\"column.id\">\r\n        <h2 class=\"column-title\">{{ column.name }}</h2>\r\n        <ul class=\"cards-list\">\r\n          <li class=\"card\" v-for=\"card in column.cards\" :key=\"card.id\">\r\n            <strong class=\"card-title\">{{ card.title }}</strong>\r\n            <p class=\"card-description\">{{ card.description }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else class=\"loading\">\r\n    Carregando...\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'KanbanBoard',\r\n  data() {\r\n    return {\r\n      board: null,\r\n    }\r\n  },\r\n  methods: {\r\n    async loadBoard() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/board/1/')\r\n        this.board = response.data\r\n      } catch (error) {\r\n        console.error('Erro ao carregar o board:', error)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadBoard()\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.kanban-board {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  color: #333;\r\n}\r\n\r\n.board-title {\r\n  text-align: center;\r\n  margin-bottom: 24px;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n}\r\n\r\n.columns {\r\n  display: flex;\r\n  gap: 24px;\r\n  overflow-x: auto;\r\n  padding-bottom: 16px;\r\n}\r\n\r\n.column {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgb(0 0 0 / 0.1);\r\n  padding: 16px;\r\n  min-width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.column-title {\r\n  font-size: 1.25rem;\r\n  margin-bottom: 16px;\r\n  color: #34495e;\r\n  border-bottom: 2px solid #2980b9;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.cards-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\n.card {\r\n  background-color: #ecf0f1;\r\n  border-radius: 6px;\r\n  padding: 12px 16px;\r\n  margin-bottom: 12px;\r\n  box-shadow: 0 1px 3px rgb(0 0 0 / 0.1);\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.card:hover {\r\n  background-color: #d0e6f7;\r\n}\r\n\r\n.card-title {\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 6px;\r\n  color: #2c3e50;\r\n}\r\n\r\n.card-description {\r\n  font-size: 0.9rem;\r\n  color: #555;\r\n  margin: 0;\r\n}\r\n\r\n.loading {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n  text-align: center;\r\n  padding: 40px 0;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EACoBC,KAAK,EAAC;;;EAClBA,KAAK,EAAC;AAAa;;EAClBA,KAAK,EAAC;AAAS;;EAEZA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAY;;EAEVA,KAAK,EAAC;AAAY;;EACvBA,KAAK,EAAC;AAAkB;;EATvCD,GAAA;EAecC,KAAK,EAAC;;;SAdPC,KAAA,CAAAC,KAAK,I,cAAhBC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAA6C,MAA7CC,UAA6C,EAAAC,gBAAA,CAAlBN,KAAA,CAAAC,KAAK,CAACM,IAAI,kBACrCH,mBAAA,CAUM,OAVNI,UAUM,I,kBATJN,mBAAA,CAQMO,SAAA,QAZZC,WAAA,CAI2CV,KAAA,CAAAC,KAAK,CAACU,OAAO,EAAvBC,MAAM;yBAAjCV,mBAAA,CAQM;MARDH,KAAK,EAAC,QAAQ;MAAkCD,GAAG,EAAEc,MAAM,CAACC;QAC/DT,mBAAA,CAA+C,MAA/CU,UAA+C,EAAAR,gBAAA,CAAnBM,MAAM,CAACL,IAAI,kBACvCH,mBAAA,CAKK,MALLW,UAKK,I,kBAJHb,mBAAA,CAGKO,SAAA,QAVfC,WAAA,CAO0CE,MAAM,CAACI,KAAK,EAApBC,IAAI;2BAA5Bf,mBAAA,CAGK;QAHDH,KAAK,EAAC,MAAM;QAA+BD,GAAG,EAAEmB,IAAI,CAACJ;UACvDT,mBAAA,CAAoD,UAApDc,UAAoD,EAAAZ,gBAAA,CAAtBW,IAAI,CAACE,KAAK,kBACxCf,mBAAA,CAAsD,KAAtDgB,UAAsD,EAAAd,gBAAA,CAAvBW,IAAI,CAACI,WAAW,iB;;uDAMzDnB,mBAAA,CAEM,OAFNoB,UAEM,EAFsB,iBAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}